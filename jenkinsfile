pipeline {
    agent { label 'jenkins-agent' }
    tools {
        jdk 'java17'
       maven 'maven3'
    }
 environment {
        APP_NAME = "register-app-ci"
        RELEASE = "1.0.0"
        DOCKER_USER = "edurushiva"
        IMAGE_NAME = "${DOCKER_USER}/${APP_NAME}"
        IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
    }
    stages {
        stage("Cleanup Workspace") {
            steps {
                cleanWs()
            }
        }

        stage("Checkout from SCM") {
            steps {
                git branch: 'master', credentialsId: 'github', url: 'https://github.com/eduru-shiva/tomcat-deployment.git'
            }
        }

        stage("Build Application") {
            steps {
                sh "mvn clean package"
            }
        }

        stage("Test Application") {
            steps {
                sh "mvn test"
            }
        }

        stage("SonarQube Analysis"){
           steps {
              script {
                 withSonarQubeEnv(credentialsId:'sonarqube-test'){
                  sh "mvn sonar:sonar"         
                  }  
             }  
         }
      }

      stage("Quality Gate"){
         steps {
            script {
               waitForQualityGate abortPipeline: false, credentialsId: 'sonarqube-test'
             }
          }
     }

     stage("Build & Push Docker Image") {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        def dockerImage = docker.build("${IMAGE_NAME}:${IMAGE_TAG}")
                        
                        dockerImage.push()
                        dockerImage.push('latest')
                    }
                }
            }
        }
    }
}
